{"version":3,"file":"static/js/186.c6f7bdd5.chunk.js","mappings":"4JA0BA,IAvBqB,SAAC,GAAgC,IAA/BA,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,UAClC,OACM,2BACGF,IAAS,yBAAG,iCAA+BA,EAAMG,WAClDD,IAAa,gBAAKE,MAAO,CAACC,QAAQ,OAAOC,aAAa,SAASC,eAAe,UAAjE,UACb,SAAC,KAAD,CACVC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,MAGAd,IAEV,C,kHCmBC,UAnCc,WACZ,IAAQe,GAAaC,EAAAA,EAAAA,MAAbD,SACV,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACE,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOhB,EAAP,KAAiBmB,EAAjB,KACA,GAAuBH,EAAAA,EAAAA,UAAS,MAAhC,eAAOlB,EAAP,KAAasB,EAAb,KAgBA,OAfFC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAU,mCAAE,oGAEdH,GAAa,GAFC,UAGQI,EAAAA,EAAAA,GAAa,UAAU,CAACT,SAASA,IAHzC,OAGRU,EAHQ,OAIdN,GAAW,SAAAD,GAAO,OAAEO,EAASC,IAAX,IAJJ,gDAMZL,EAAS,KAAMnB,SANH,yBAQhBkB,GAAa,GARG,4EAAF,qDAWhBG,GACD,GAAC,CAACR,KAEC,8BACE,SAAC,IAAD,CAAchB,MAAOA,EAAOE,UAAWA,EAAvC,SACKiB,GACXA,EAAQS,QAAQC,KAAI,SAAAC,GAEd,OAAO,2BACP,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFKF,EAAOG,GAGpB,OAKR,C,8DCtCGC,EAAU,+BACVC,EAAS,mCACTC,EAAQ,UAAMF,EAAN,qBACRG,EAAS,UAAMH,EAAN,iBACTI,EAAU,UAAMJ,EAAN,UACVK,EAAU,UAAML,EAAN,UACVM,EAAU,UAAMN,EAAN,UAEVT,EAAY,mCAAG,WAAOgB,EAAP,kFAAoBC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,KAAM3B,EAAvC,EAAuCA,SACtD4B,EAAa,GADE,KAEXH,EAFW,OAGZ,UAHY,OAMZ,WANY,OAUZ,YAVY,OAaZ,YAbY,QAgBZ,YAhBY,+BAIfG,EAAaR,EAAQ,mBAAeD,EAAf,iBAA8BQ,GAJpC,mCAOfC,EACEP,EAAS,mBAAeF,EAAf,iBAA8BQ,EAA9B,kBAA4CD,GARxC,mCAWfE,EAAaN,EAAU,WAAOtB,EAAP,oBAA2BmB,GAXnC,oCAcfS,EAAaL,EAAU,WAAOvB,EAAP,6BAAoCmB,GAd5C,oCAiBfS,EAAaJ,EAAU,WAAOxB,EAAP,4BAAmCmB,GAjB3C,wEAsBbT,EAAWmB,EAAAA,EAAAA,IAAUD,GAtBR,kBAuBZlB,GAvBY,4CAAH,wDAyBlB,K","sources":["components/LoadingBlock/LoadingBlock.jsx","components/Reviews/Reviews.jsx","httpRequest.js"],"sourcesContent":["import { ThreeDots} from 'react-loader-spinner'\nimport PropTypes from \"prop-types\";\n\nconst LoadingBlock = ({error,children,isLoading}) => {\n    return (\n          <div>\n            {error && <p>Whoops, something went wrong: {error.message}</p>}\n           {isLoading && <div style={{display:'flex',alignContent:\"center\",justifyContent:\"center\"}}>\n            <ThreeDots \n  height=\"80\" \n  width=\"80\" \n  radius=\"9\"\n  color=\"#ed3469\" \n  ariaLabel=\"three-dots-loading\"\n  wrapperStyle={{}}\n  wrapperClassName=\"\"\n  visible={true}\n   />\n            </div>}\n          {children}\n          </div>);\n}\nLoadingBlock.propTypes = {\n    error: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n}\nexport default LoadingBlock;","import { useState,useEffect } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport fetchRequest from \"httpRequest\";\nimport LoadingBlock from \"components/LoadingBlock/LoadingBlock\";\n\nconst Reviews = () => {\n    const { movie_id } = useParams();\n  const [reviews,setReviews] =useState(null);  \n    const [isLoading,setIsLoading]=useState(false);\n    const [error,setError]=useState(null);\n  useEffect(()=>\n  { \n    const addCredits= async ()=>{  \n      try {\n        setIsLoading(true);\n        const response =await fetchRequest(\"reviews\",{movie_id:movie_id});\n        setReviews(reviews=>response.data);\n         } catch (error) {\n          setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }  \n    addCredits();\n  },[movie_id]); \n    return (\n      <section>\n        <LoadingBlock error={error} isLoading={isLoading}>\n            {reviews&&\n  reviews.results.map(result=>\n    {\n        return(<li key={result.id}>\n        <h2>Author: {result.author}</h2>\n        <p>{result.content}</p>\n    </li>)}\n    )}\n        </LoadingBlock>\n      </section>\n    );\n  };\n  export default Reviews;","import axios from 'axios';\nconst BaseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = '00cb515606c3767771985834ed87ee26';\nconst TrendURL = `${BaseURL}/trending/all/day`;\nconst SearchURL = `${BaseURL}/search/movie`;\nconst DetailsURL = `${BaseURL}/movie`;\nconst CreditsURL = `${BaseURL}/movie`;\nconst ReviewsURL = `${BaseURL}/movie`;\n\nconst fetchRequest = async (condition, { searchQuery, page, movie_id }) => {\n  let RequestURL = '';\n  switch (condition) {\n    case 'trend':\n      RequestURL = TrendURL + `?api_key=${APIKEY}&page=${page}`;\n      break;\n    case 'search':\n      RequestURL =\n        SearchURL + `?api_key=${APIKEY}&page=${page}&query=${searchQuery}`;\n      break;\n    case 'details':\n      RequestURL = DetailsURL + `/${movie_id}?api_key=${APIKEY}`;\n      break;\n    case 'credits':\n      RequestURL = CreditsURL + `/${movie_id}/credits?&api_key=${APIKEY}`;\n      break;\n    case 'reviews':\n      RequestURL = ReviewsURL + `/${movie_id}/reviews?api_key=${APIKEY}`;\n      break;\n    default:\n      break;\n  }\n  const response = axios.get(RequestURL);\n  return response;\n};\nexport default fetchRequest;\n"],"names":["error","children","isLoading","message","style","display","alignContent","justifyContent","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","movie_id","useParams","useState","reviews","setReviews","setIsLoading","setError","useEffect","addCredits","fetchRequest","response","data","results","map","result","author","content","id","BaseURL","APIKEY","TrendURL","SearchURL","DetailsURL","CreditsURL","ReviewsURL","condition","searchQuery","page","RequestURL","axios"],"sourceRoot":""}