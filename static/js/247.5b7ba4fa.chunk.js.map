{"version":3,"file":"static/js/247.5b7ba4fa.chunk.js","mappings":"kOA2CE,UAtCW,WACT,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACV,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACE,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAuBJ,EAAAA,EAAAA,UAAS,MAAhC,eAAOK,EAAP,KAAaC,EAAb,KAgBA,OAfFC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAU,mCAAE,oGAEdJ,GAAa,GAFC,UAGQK,EAAAA,EAAAA,GAAa,UAAU,CAACX,SAASA,IAHzC,OAGRY,EAHQ,OAIdR,GAAW,SAAAD,GAAO,OAAES,EAASC,IAAX,IAJJ,gDAMZL,EAAS,KAAMM,SANH,yBAQhBR,GAAa,GARG,4EAAF,qDAWhBI,GACD,GAAC,CAACV,KAEC,8BACE,SAAC,IAAD,CAAcO,MAAOA,EAAOF,UAAWA,EAAvC,SACKF,GACDA,EAAQY,KAAKC,KAAI,SAAAC,GAET,IAAMC,EAAQD,EAASE,aAAV,0CAAgJF,EAASE,cAAlI,sFACpC,OAAO,2BACP,gBAAKC,IAAKF,EAAQG,IAAKJ,EAASK,KAAMC,MAAM,WAC5C,uBAAIN,EAASK,QACb,yBAAG,cAAYL,EAASO,eAHRP,EAASQ,GAItB,OAKpB,C,4CCfH,IAvBqB,SAAC,GAAgC,IAA/BlB,EAA8B,EAA9BA,MAAMmB,EAAwB,EAAxBA,SAASrB,EAAe,EAAfA,UAClC,OACM,2BACGE,IAAS,yBAAG,iCAA+BA,EAAMO,WAClDT,IAAa,gBAAKsB,MAAO,CAACC,QAAQ,OAAOC,aAAa,SAASC,eAAe,UAAjE,UACb,SAAC,KAAD,CACVC,OAAO,KACPR,MAAM,KACNS,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,MAGAX,IAEV,C,8DCpBKY,EAAU,+BACVC,EAAS,mCACTC,EAAQ,UAAMF,EAAN,qBACRG,EAAS,UAAMH,EAAN,iBACTI,EAAU,UAAMJ,EAAN,UACVK,EAAU,UAAML,EAAN,UACVM,EAAU,UAAMN,EAAN,UAEV3B,EAAY,mCAAG,WAAOkC,EAAP,kFAAoBC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,KAAM/C,EAAvC,EAAuCA,SACtDgD,EAAa,GADE,KAEXH,EAFW,OAGZ,UAHY,OAMZ,WANY,OAUZ,YAVY,OAaZ,YAbY,QAgBZ,YAhBY,+BAIfG,EAAaR,EAAQ,mBAAeD,EAAf,iBAA8BQ,GAJpC,mCAOfC,EACEP,EAAS,mBAAeF,EAAf,iBAA8BQ,EAA9B,kBAA4CD,GARxC,mCAWfE,EAAaN,EAAU,WAAO1C,EAAP,oBAA2BuC,GAXnC,oCAcfS,EAAaL,EAAU,WAAO3C,EAAP,6BAAoCuC,GAd5C,oCAiBfS,EAAaJ,EAAU,WAAO5C,EAAP,4BAAmCuC,GAjB3C,wEAsBb3B,EAAWqC,EAAAA,EAAAA,IAAUD,GAtBR,kBAuBZpC,GAvBY,4CAAH,wDAyBlB,K","sources":["components/Cast/Cast.jsx","components/LoadingBlock/LoadingBlock.jsx","httpRequest.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport fetchRequest from \"httpRequest\";\nimport LoadingBlock from \"components/LoadingBlock/LoadingBlock\";\n\nconst Cast = () => {\n    const { movie_id } = useParams();\n  const [credits,setCredits] =useState(null);  \n    const [isLoading,setIsLoading]=useState(false);\n    const [error,setError]=useState(null);\n  useEffect(()=>\n  { \n    const addCredits= async ()=>{  \n      try {\n        setIsLoading(true);\n        const response =await fetchRequest(\"credits\",{movie_id:movie_id});\n        setCredits(credits=>response.data);\n         } catch (error) {\n          setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }  \n    addCredits();\n  },[movie_id]); \n    return (\n      <section>\n        <LoadingBlock error={error} isLoading={isLoading}>\n            {credits&&\n            credits.cast.map(cast_one=>\n                {\n                    const urlImg=!cast_one.profile_path?\"https://ru.hostings.info/upload/images/2021/12/e11044b915dc39afc3004430606bd6d1.jpg\":`https://image.tmdb.org/t/p/w500/${cast_one.profile_path}`;    \n                    return(<li key={cast_one.id}>\n                    <img src={urlImg} alt={cast_one.name} width=\"100px\"></img>\n                    <p>{cast_one.name}</p>\n                    <p>character: {cast_one.character}</p>\n                </li>)}\n                )}\n        </LoadingBlock>\n      </section>\n    );\n  };\n  \n  export default Cast;","import { ThreeDots} from 'react-loader-spinner'\nimport PropTypes from \"prop-types\";\n\nconst LoadingBlock = ({error,children,isLoading}) => {\n    return (\n          <div>\n            {error && <p>Whoops, something went wrong: {error.message}</p>}\n           {isLoading && <div style={{display:'flex',alignContent:\"center\",justifyContent:\"center\"}}>\n            <ThreeDots \n  height=\"80\" \n  width=\"80\" \n  radius=\"9\"\n  color=\"#ed3469\" \n  ariaLabel=\"three-dots-loading\"\n  wrapperStyle={{}}\n  wrapperClassName=\"\"\n  visible={true}\n   />\n            </div>}\n          {children}\n          </div>);\n}\nLoadingBlock.propTypes = {\n    error: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n}\nexport default LoadingBlock;","import axios from 'axios';\nconst BaseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = '00cb515606c3767771985834ed87ee26';\nconst TrendURL = `${BaseURL}/trending/all/day`;\nconst SearchURL = `${BaseURL}/search/movie`;\nconst DetailsURL = `${BaseURL}/movie`;\nconst CreditsURL = `${BaseURL}/movie`;\nconst ReviewsURL = `${BaseURL}/movie`;\n\nconst fetchRequest = async (condition, { searchQuery, page, movie_id }) => {\n  let RequestURL = '';\n  switch (condition) {\n    case 'trend':\n      RequestURL = TrendURL + `?api_key=${APIKEY}&page=${page}`;\n      break;\n    case 'search':\n      RequestURL =\n        SearchURL + `?api_key=${APIKEY}&page=${page}&query=${searchQuery}`;\n      break;\n    case 'details':\n      RequestURL = DetailsURL + `/${movie_id}?api_key=${APIKEY}`;\n      break;\n    case 'credits':\n      RequestURL = CreditsURL + `/${movie_id}/credits?&api_key=${APIKEY}`;\n      break;\n    case 'reviews':\n      RequestURL = ReviewsURL + `/${movie_id}/reviews?api_key=${APIKEY}`;\n      break;\n    default:\n      break;\n  }\n  const response = axios.get(RequestURL);\n  return response;\n};\nexport default fetchRequest;\n"],"names":["movie_id","useParams","useState","credits","setCredits","isLoading","setIsLoading","error","setError","useEffect","addCredits","fetchRequest","response","data","message","cast","map","cast_one","urlImg","profile_path","src","alt","name","width","character","id","children","style","display","alignContent","justifyContent","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","BaseURL","APIKEY","TrendURL","SearchURL","DetailsURL","CreditsURL","ReviewsURL","condition","searchQuery","page","RequestURL","axios"],"sourceRoot":""}